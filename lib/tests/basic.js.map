{
  "version": 3,
  "file": "basic.js",
  "sourceRoot": "../..",
  "sources": [
    "src/tests/basic.coffee"
  ],
  "names": [],
  "mappings": ";AAAA;EAAA;AAAA,MAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,KAAA,EAAA,KAAA,EAAA,KAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,GAAA,EAAA,GAAA,EAAA,IAAA,EAAA,IAAA,EAAA;;EAEA,GAAA,GAA4B,OAAA,CAAQ,KAAR;;EAC5B,GAAA,GAA4B,GAAG,CAAC;;EAChC,KAAA,GAA4B;;EAC5B,GAAA,GAA4B,GAAG,CAAC,UAAJ,CAAe,OAAf,EAA4B,KAA5B;;EAC5B,IAAA,GAA4B,GAAG,CAAC,UAAJ,CAAe,MAAf,EAA4B,KAA5B;;EAC5B,OAAA,GAA4B,GAAG,CAAC,UAAJ,CAAe,SAAf,EAA4B,KAA5B;;EAC5B,KAAA,GAA4B,GAAG,CAAC,UAAJ,CAAe,OAAf,EAA4B,KAA5B;;EAC5B,KAAA,GAA4B,GAAG,CAAC,UAAJ,CAAe,OAAf,EAA4B,KAA5B;;EAC5B,IAAA,GAA4B,GAAG,CAAC,UAAJ,CAAe,MAAf,EAA4B,KAA5B;;EAC5B,IAAA,GAA4B,GAAG,CAAC,UAAJ,CAAe,MAAf,EAA4B,KAA5B;;EAC5B,IAAA,GAA4B,GAAG,CAAC,UAAJ,CAAe,MAAf,EAA4B,KAA5B;;EAC5B,IAAA,GAA4B,GAAG,CAAC,IAAI,CAAC,IAAT,CAAc,GAAd,EAb5B;;;EAeA,GAAA,GAA4B,OAAA,CAAQ,OAAR;;EAC5B,GAAA,GAA4B,OAAA,CAAQ,KAAR,EAhB5B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;EA4FA,GAAG,CAAC,IAAJ,CAAS,kBAAT,EAA6B,QAAA,CAAE,CAAF,CAAA;AAC3B,QAAA,GAAA,EAAA,CAAA,EAAA,GAAA,EAAA,IAAA,EAAA,KAAA;;;;;;;;;;;;;;;IAAA,KAAA,GAAQ,CAeN,OAfM;IAiBR,KAAA,uCAAA;sBAAA;;MAEE,IAAA,CAAK;;AAAyD;AAAA;QAAA,KAAA,uCAAA;;uBAArD,CAAE,GAAG,CAAC,IAAJ,CAAS,CAAA,CAAA,CAAG,GAAG,CAAC,IAAP,EAAA,CAAT,CAAF,CAAA,GAA8B,CAAE,GAAG,CAAC,MAAJ,CAAW,GAAG,CAAC,CAAf,CAAF;QAAuB,CAAA;;UAAzD,CAA+F,CAAE,IAAjG,CAAsG,GAAtG,CAAL;IAFF;WAGA,CAAC,CAAC,GAAF,CAAA;EArB2B,CAA7B;;EA5FA;;;;;;;;;;;;;;;;;AAAA",
  "sourcesContent": [
    "\n############################################################################################################\nCND                       = require 'cnd'\nrpr                       = CND.rpr\nbadge                     = 'JZR/tests'\nlog                       = CND.get_logger 'plain',     badge\ninfo                      = CND.get_logger 'info',      badge\nwhisper                   = CND.get_logger 'whisper',   badge\nalert                     = CND.get_logger 'alert',     badge\ndebug                     = CND.get_logger 'debug',     badge\nwarn                      = CND.get_logger 'warn',      badge\nhelp                      = CND.get_logger 'help',      badge\nurge                      = CND.get_logger 'urge',      badge\necho                      = CND.echo.bind CND\n#...........................................................................................................\nJZR                       = require '../..'\nTAP                       = require 'tap'\n\n###\n#-----------------------------------------------------------------------------------------------------------\nTAP.test \"additional 5\", ( T ) ->\n  probes_and_matchers = [\n    [\"xyz\",[]]\n    [\"barbarbar\",[{\"d\":\"bar\",\"length\":3,\"count\":3,\"area\":9},{\"d\":\"ba\",\"length\":2,\"count\":3,\"area\":6},{\"d\":\"ar\",\"length\":2,\"count\":3,\"area\":6},{\"d\":\"arb\",\"length\":3,\"count\":2,\"area\":6},{\"d\":\"rba\",\"length\":3,\"count\":2,\"area\":6},{\"d\":\"rb\",\"length\":2,\"count\":2,\"area\":4},{\"d\":\"b\",\"length\":1,\"count\":3,\"area\":3},{\"d\":\"a\",\"length\":1,\"count\":3,\"area\":3},{\"d\":\"r\",\"length\":1,\"count\":3,\"area\":3}]]\n    [\"abcdef\",[]]\n    [\"foobarbarbar\",[{\"d\":\"bar\",\"length\":3,\"count\":3,\"area\":9},{\"d\":\"ba\",\"length\":2,\"count\":3,\"area\":6},{\"d\":\"ar\",\"length\":2,\"count\":3,\"area\":6},{\"d\":\"arb\",\"length\":3,\"count\":2,\"area\":6},{\"d\":\"rba\",\"length\":3,\"count\":2,\"area\":6},{\"d\":\"rb\",\"length\":2,\"count\":2,\"area\":4},{\"d\":\"b\",\"length\":1,\"count\":3,\"area\":3},{\"d\":\"a\",\"length\":1,\"count\":3,\"area\":3},{\"d\":\"r\",\"length\":1,\"count\":3,\"area\":3},{\"d\":\"o\",\"length\":1,\"count\":2,\"area\":2}]]\n    [\"\",[]]\n    [\"oo\",[{\"d\":\"o\",\"length\":1,\"count\":2,\"area\":2}]]\n    [\"foobarbarbarfoo\",[{\"d\":\"bar\",\"length\":3,\"count\":3,\"area\":9},{\"d\":\"ba\",\"length\":2,\"count\":3,\"area\":6},{\"d\":\"ar\",\"length\":2,\"count\":3,\"area\":6},{\"d\":\"rba\",\"length\":3,\"count\":2,\"area\":6},{\"d\":\"foo\",\"length\":3,\"count\":2,\"area\":6},{\"d\":\"arb\",\"length\":3,\"count\":2,\"area\":6},{\"d\":\"o\",\"length\":1,\"count\":4,\"area\":4},{\"d\":\"oo\",\"length\":2,\"count\":2,\"area\":4},{\"d\":\"fo\",\"length\":2,\"count\":2,\"area\":4},{\"d\":\"rb\",\"length\":2,\"count\":2,\"area\":4},{\"d\":\"r\",\"length\":1,\"count\":3,\"area\":3},{\"d\":\"a\",\"length\":1,\"count\":3,\"area\":3},{\"d\":\"b\",\"length\":1,\"count\":3,\"area\":3},{\"d\":\"f\",\"length\":1,\"count\":2,\"area\":2}]]\n    [\"foobarrbarrbarrfoo\",[{\"d\":\"barr\",\"length\":4,\"count\":3,\"area\":12},{\"d\":\"arr\",\"length\":3,\"count\":3,\"area\":9},{\"d\":\"bar\",\"length\":3,\"count\":3,\"area\":9},{\"d\":\"rbar\",\"length\":4,\"count\":2,\"area\":8},{\"d\":\"arrb\",\"length\":4,\"count\":2,\"area\":8},{\"d\":\"rrba\",\"length\":4,\"count\":2,\"area\":8},{\"d\":\"r\",\"length\":1,\"count\":6,\"area\":6},{\"d\":\"rr\",\"length\":2,\"count\":3,\"area\":6},{\"d\":\"ar\",\"length\":2,\"count\":3,\"area\":6},{\"d\":\"ba\",\"length\":2,\"count\":3,\"area\":6},{\"d\":\"foo\",\"length\":3,\"count\":2,\"area\":6},{\"d\":\"rrb\",\"length\":3,\"count\":2,\"area\":6},{\"d\":\"rba\",\"length\":3,\"count\":2,\"area\":6},{\"d\":\"o\",\"length\":1,\"count\":4,\"area\":4},{\"d\":\"fo\",\"length\":2,\"count\":2,\"area\":4},{\"d\":\"oo\",\"length\":2,\"count\":2,\"area\":4},{\"d\":\"rb\",\"length\":2,\"count\":2,\"area\":4},{\"d\":\"a\",\"length\":1,\"count\":3,\"area\":3},{\"d\":\"b\",\"length\":1,\"count\":3,\"area\":3},{\"d\":\"f\",\"length\":1,\"count\":2,\"area\":2}]]\n    [\"bannanana\",[{\"d\":\"an\",\"length\":2,\"count\":3,\"area\":6},{\"d\":\"na\",\"length\":2,\"count\":3,\"area\":6},{\"d\":\"a\",\"length\":1,\"count\":4,\"area\":4},{\"d\":\"n\",\"length\":1,\"count\":4,\"area\":4}]]\n    [\"䀠目几几几\",[{\"d\":\"几\",\"length\":1,\"count\":3,\"area\":3}]]\n    [\"䀠几乎目几乎几几几几乎\",[{\"d\":\"几\",\"length\":1,\"count\":6,\"area\":6},{\"d\":\"几乎\",\"length\":2,\"count\":3,\"area\":6},{\"d\":\"几几\",\"length\":2,\"count\":2,\"area\":4},{\"d\":\"乎\",\"length\":1,\"count\":3,\"area\":3}]]\n    [\"几乎几乎几乎几乎\",[{\"d\":\"几乎\",\"length\":2,\"count\":4,\"area\":8},{\"d\":\"几乎几乎\",\"length\":4,\"count\":2,\"area\":8},{\"d\":\"乎几\",\"length\":2,\"count\":3,\"area\":6},{\"d\":\"几乎几\",\"length\":3,\"count\":2,\"area\":6},{\"d\":\"乎几乎\",\"length\":3,\"count\":2,\"area\":6},{\"d\":\"几\",\"length\":1,\"count\":4,\"area\":4},{\"d\":\"乎\",\"length\":1,\"count\":4,\"area\":4}]]\n    [\"几几几几乎䀠几乎目几乎\",[{\"d\":\"几\",\"length\":1,\"count\":6,\"area\":6},{\"d\":\"几乎\",\"length\":2,\"count\":3,\"area\":6},{\"d\":\"几几\",\"length\":2,\"count\":2,\"area\":4},{\"d\":\"乎\",\"length\":1,\"count\":3,\"area\":3}]]\n    [\"barONEbarTWObarTHREE\",[{\"d\":\"bar\",\"length\":3,\"count\":3,\"area\":9},{\"d\":\"barT\",\"length\":4,\"count\":2,\"area\":8},{\"d\":\"ba\",\"length\":2,\"count\":3,\"area\":6},{\"d\":\"ar\",\"length\":2,\"count\":3,\"area\":6},{\"d\":\"arT\",\"length\":3,\"count\":2,\"area\":6},{\"d\":\"rT\",\"length\":2,\"count\":2,\"area\":4},{\"d\":\"E\",\"length\":1,\"count\":3,\"area\":3},{\"d\":\"a\",\"length\":1,\"count\":3,\"area\":3},{\"d\":\"r\",\"length\":1,\"count\":3,\"area\":3},{\"d\":\"b\",\"length\":1,\"count\":3,\"area\":3},{\"d\":\"T\",\"length\":1,\"count\":2,\"area\":2},{\"d\":\"O\",\"length\":1,\"count\":2,\"area\":2}]]\n    [\"1baron3baron5baron0KING6KING7\",[{\"d\":\"baron\",\"length\":5,\"count\":3,\"area\":15},{\"d\":\"aron\",\"length\":4,\"count\":3,\"area\":12},{\"d\":\"baro\",\"length\":4,\"count\":3,\"area\":12},{\"d\":\"ron\",\"length\":3,\"count\":3,\"area\":9},{\"d\":\"aro\",\"length\":3,\"count\":3,\"area\":9},{\"d\":\"bar\",\"length\":3,\"count\":3,\"area\":9},{\"d\":\"KING\",\"length\":4,\"count\":2,\"area\":8},{\"d\":\"on\",\"length\":2,\"count\":3,\"area\":6},{\"d\":\"ro\",\"length\":2,\"count\":3,\"area\":6},{\"d\":\"ba\",\"length\":2,\"count\":3,\"area\":6},{\"d\":\"ar\",\"length\":2,\"count\":3,\"area\":6},{\"d\":\"KIN\",\"length\":3,\"count\":2,\"area\":6},{\"d\":\"ING\",\"length\":3,\"count\":2,\"area\":6},{\"d\":\"KI\",\"length\":2,\"count\":2,\"area\":4},{\"d\":\"IN\",\"length\":2,\"count\":2,\"area\":4},{\"d\":\"NG\",\"length\":2,\"count\":2,\"area\":4},{\"d\":\"b\",\"length\":1,\"count\":3,\"area\":3},{\"d\":\"a\",\"length\":1,\"count\":3,\"area\":3},{\"d\":\"n\",\"length\":1,\"count\":3,\"area\":3},{\"d\":\"o\",\"length\":1,\"count\":3,\"area\":3},{\"d\":\"r\",\"length\":1,\"count\":3,\"area\":3},{\"d\":\"G\",\"length\":1,\"count\":2,\"area\":2},{\"d\":\"N\",\"length\":1,\"count\":2,\"area\":2},{\"d\":\"I\",\"length\":1,\"count\":2,\"area\":2},{\"d\":\"K\",\"length\":1,\"count\":2,\"area\":2}]]\n    [\"0KING1baron3baron5baron6KING7\",[{\"d\":\"baron\",\"length\":5,\"count\":3,\"area\":15},{\"d\":\"aron\",\"length\":4,\"count\":3,\"area\":12},{\"d\":\"baro\",\"length\":4,\"count\":3,\"area\":12},{\"d\":\"ron\",\"length\":3,\"count\":3,\"area\":9},{\"d\":\"aro\",\"length\":3,\"count\":3,\"area\":9},{\"d\":\"bar\",\"length\":3,\"count\":3,\"area\":9},{\"d\":\"KING\",\"length\":4,\"count\":2,\"area\":8},{\"d\":\"ba\",\"length\":2,\"count\":3,\"area\":6},{\"d\":\"on\",\"length\":2,\"count\":3,\"area\":6},{\"d\":\"ro\",\"length\":2,\"count\":3,\"area\":6},{\"d\":\"ar\",\"length\":2,\"count\":3,\"area\":6},{\"d\":\"KIN\",\"length\":3,\"count\":2,\"area\":6},{\"d\":\"ING\",\"length\":3,\"count\":2,\"area\":6},{\"d\":\"NG\",\"length\":2,\"count\":2,\"area\":4},{\"d\":\"IN\",\"length\":2,\"count\":2,\"area\":4},{\"d\":\"KI\",\"length\":2,\"count\":2,\"area\":4},{\"d\":\"o\",\"length\":1,\"count\":3,\"area\":3},{\"d\":\"n\",\"length\":1,\"count\":3,\"area\":3},{\"d\":\"b\",\"length\":1,\"count\":3,\"area\":3},{\"d\":\"r\",\"length\":1,\"count\":3,\"area\":3},{\"d\":\"a\",\"length\":1,\"count\":3,\"area\":3},{\"d\":\"I\",\"length\":1,\"count\":2,\"area\":2},{\"d\":\"G\",\"length\":1,\"count\":2,\"area\":2},{\"d\":\"N\",\"length\":1,\"count\":2,\"area\":2},{\"d\":\"K\",\"length\":1,\"count\":2,\"area\":2}]]\n    [\"XXXOXXX0KING1baron2KING3baron4KING5baron6KING7XOX\",[{\"d\":\"KING\",\"length\":4,\"count\":4,\"area\":16},{\"d\":\"baron\",\"length\":5,\"count\":3,\"area\":15},{\"d\":\"ING\",\"length\":3,\"count\":4,\"area\":12},{\"d\":\"KIN\",\"length\":3,\"count\":4,\"area\":12},{\"d\":\"aron\",\"length\":4,\"count\":3,\"area\":12},{\"d\":\"baro\",\"length\":4,\"count\":3,\"area\":12},{\"d\":\"ron\",\"length\":3,\"count\":3,\"area\":9},{\"d\":\"aro\",\"length\":3,\"count\":3,\"area\":9},{\"d\":\"bar\",\"length\":3,\"count\":3,\"area\":9},{\"d\":\"X\",\"length\":1,\"count\":8,\"area\":8},{\"d\":\"NG\",\"length\":2,\"count\":4,\"area\":8},{\"d\":\"KI\",\"length\":2,\"count\":4,\"area\":8},{\"d\":\"IN\",\"length\":2,\"count\":4,\"area\":8},{\"d\":\"on\",\"length\":2,\"count\":3,\"area\":6},{\"d\":\"ro\",\"length\":2,\"count\":3,\"area\":6},{\"d\":\"ba\",\"length\":2,\"count\":3,\"area\":6},{\"d\":\"ar\",\"length\":2,\"count\":3,\"area\":6},{\"d\":\"XXX\",\"length\":3,\"count\":2,\"area\":6},{\"d\":\"XOX\",\"length\":3,\"count\":2,\"area\":6},{\"d\":\"G\",\"length\":1,\"count\":4,\"area\":4},{\"d\":\"N\",\"length\":1,\"count\":4,\"area\":4},{\"d\":\"I\",\"length\":1,\"count\":4,\"area\":4},{\"d\":\"K\",\"length\":1,\"count\":4,\"area\":4},{\"d\":\"XX\",\"length\":2,\"count\":2,\"area\":4},{\"d\":\"XO\",\"length\":2,\"count\":2,\"area\":4},{\"d\":\"OX\",\"length\":2,\"count\":2,\"area\":4},{\"d\":\"a\",\"length\":1,\"count\":3,\"area\":3},{\"d\":\"o\",\"length\":1,\"count\":3,\"area\":3},{\"d\":\"r\",\"length\":1,\"count\":3,\"area\":3},{\"d\":\"n\",\"length\":1,\"count\":3,\"area\":3},{\"d\":\"b\",\"length\":1,\"count\":3,\"area\":3},{\"d\":\"O\",\"length\":1,\"count\":2,\"area\":2}]]\n    [\"𠃊𠃌一\",[]]\n    ]\n  for [ probe, matcher, ] in probes_and_matchers\n    results = JZR.find_repetitions probe\n    # urge ( JSON.stringify [ probe, results, ] )\n    T.ok CND.equals matcher, results\n  T.end()\n  return null\n\n#-----------------------------------------------------------------------------------------------------------\nTAP.test \"invariance under reordering\", ( T ) ->\n  result_1 = JZR.find_repetitions \"䀠几乎目几乎几几几几乎\"\n  result_2 = JZR.find_repetitions \"几几几几乎䀠几乎目几乎\"\n  urge '\\n' + ( JSON.stringify result_1 )\n  urge '\\n' + ( JSON.stringify result_2 )\n  T.ok CND.equals result_1, result_2\n  T.end()\n  return null\n\n#-----------------------------------------------------------------------------------------------------------\nTAP.test \"demo 1\", ( T ) ->\n  texts = [\n    \"䀠几乎目几乎几几几几乎\"\n    \"几乎几乎几乎几乎\"\n    \"几几几几乎䀠几乎目几乎\"\n    \"𠃊𠃌一\"\n    \"凵日𠣏日𠣏\"\n    \"YABAB\"\n    \"YABABCDCD\"\n    ]\n  for text in texts\n    info text\n    help ( JSON.stringify hit ) for hit in JZR.find_repetitions text\n  T.end()\n\n#-----------------------------------------------------------------------------------------------------------\nTAP.test \"demo 2\", ( T ) ->\n  texts = [\n    \"YABAB\"\n    \"YABABCDCD\"\n    \"䀠几乎目几乎几几几几乎\"\n    \"几乎几乎几乎几乎\"\n    \"几几几几乎䀠几乎目几乎\"\n    \"𠃊𠃌一\"\n    \"凵日𠣏日𠣏\"\n    ]\n  for text in texts\n    help text\n    info ( JSON.stringify hit ) for hit in repetitions_from_text text\n  T.end()\n###\n\n#-----------------------------------------------------------------------------------------------------------\nTAP.test \"results ordering\", ( T ) ->\n  texts = [\n    # '几几几乎䀠几乎目几乎'\n    # '几几乎䀠几乎目几乎'\n    # '几乎䀠几乎目几乎'\n    # 'abc1234567abc'\n    # 'xxxxxxxxxabcdabcdabcdabcd'\n    # 'ababababABABABAB'\n    # 'barONEbarTWObarTHREE'\n    # 'foobarbarbar'\n    # 'foobarbarbarbar'\n    # '⿰(⿱屮兀⿰⿱屮兀⿱屮兀)'\n    # '几几几几乎䀠几乎目几乎'\n    # '123xxxx456ab,ab,ab,ab'\n    # Array.from '几几几几乎䀠几乎目几乎'\n    # Array.from '几几乎几乎'\n    '几几乎几乎'\n    ]\n  for text in texts\n    # urge ( ( ( CND.grey \"#{hit.area} #{hit.count} #{hit.degree} \" ) + ( CND.yellow hit.d ) ) for hit in JZR.find_repetitions text ). join ' '\n    urge ( ( ( CND.grey \"#{hit.area} \" ) + ( CND.yellow hit.d ) ) for hit in JZR.find_repetitions text ). join ' '\n  T.end()\n\n\n###\nd = Array.from 'abcxxxxxdef'\nf = Array.from 'xx'\n\nhelp d.findIndex ( element, idx ) ->\n  debug element, d[ idx ] == f[ 0 ] and d[ idx + 1 ] == f[ 0 + 1 ]\n  return false\n\n```\nfor(var i=0; i< namesArray.length; i++) {\n  var count = 0;\n  for(var j = 0; j < namesSerieArray.length; j++){\n  if(namesSerieArray[i] == namesArray[j])\n    count++;\n  }\n```\n###\n\n"
  ]
}